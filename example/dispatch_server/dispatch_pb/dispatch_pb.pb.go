// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dispatch_pb.proto

package dispatch_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type COMM_PKG struct {
	PkgType              *int32   `protobuf:"varint,1,req,name=pkg_type,json=pkgType" json:"pkg_type,omitempty"`
	RealPkg              []byte   `protobuf:"bytes,2,req,name=real_pkg,json=realPkg" json:"real_pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *COMM_PKG) Reset()         { *m = COMM_PKG{} }
func (m *COMM_PKG) String() string { return proto.CompactTextString(m) }
func (*COMM_PKG) ProtoMessage()    {}
func (*COMM_PKG) Descriptor() ([]byte, []int) {
	return fileDescriptor_93f2d25675cb07e3, []int{0}
}

func (m *COMM_PKG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_COMM_PKG.Unmarshal(m, b)
}
func (m *COMM_PKG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_COMM_PKG.Marshal(b, m, deterministic)
}
func (m *COMM_PKG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_COMM_PKG.Merge(m, src)
}
func (m *COMM_PKG) XXX_Size() int {
	return xxx_messageInfo_COMM_PKG.Size(m)
}
func (m *COMM_PKG) XXX_DiscardUnknown() {
	xxx_messageInfo_COMM_PKG.DiscardUnknown(m)
}

var xxx_messageInfo_COMM_PKG proto.InternalMessageInfo

func (m *COMM_PKG) GetPkgType() int32 {
	if m != nil && m.PkgType != nil {
		return *m.PkgType
	}
	return 0
}

func (m *COMM_PKG) GetRealPkg() []byte {
	if m != nil {
		return m.RealPkg
	}
	return nil
}

type LOG_DATA_PKG struct {
	Dataid               *string  `protobuf:"bytes,1,req,name=dataid" json:"dataid,omitempty"`
	Timestamp            *uint32  `protobuf:"varint,2,req,name=timestamp" json:"timestamp,omitempty"`
	Clientip             *string  `protobuf:"bytes,3,req,name=clientip" json:"clientip,omitempty"`
	Logmsg               []byte   `protobuf:"bytes,4,req,name=logmsg" json:"logmsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LOG_DATA_PKG) Reset()         { *m = LOG_DATA_PKG{} }
func (m *LOG_DATA_PKG) String() string { return proto.CompactTextString(m) }
func (*LOG_DATA_PKG) ProtoMessage()    {}
func (*LOG_DATA_PKG) Descriptor() ([]byte, []int) {
	return fileDescriptor_93f2d25675cb07e3, []int{1}
}

func (m *LOG_DATA_PKG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LOG_DATA_PKG.Unmarshal(m, b)
}
func (m *LOG_DATA_PKG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LOG_DATA_PKG.Marshal(b, m, deterministic)
}
func (m *LOG_DATA_PKG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LOG_DATA_PKG.Merge(m, src)
}
func (m *LOG_DATA_PKG) XXX_Size() int {
	return xxx_messageInfo_LOG_DATA_PKG.Size(m)
}
func (m *LOG_DATA_PKG) XXX_DiscardUnknown() {
	xxx_messageInfo_LOG_DATA_PKG.DiscardUnknown(m)
}

var xxx_messageInfo_LOG_DATA_PKG proto.InternalMessageInfo

func (m *LOG_DATA_PKG) GetDataid() string {
	if m != nil && m.Dataid != nil {
		return *m.Dataid
	}
	return ""
}

func (m *LOG_DATA_PKG) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *LOG_DATA_PKG) GetClientip() string {
	if m != nil && m.Clientip != nil {
		return *m.Clientip
	}
	return ""
}

func (m *LOG_DATA_PKG) GetLogmsg() []byte {
	if m != nil {
		return m.Logmsg
	}
	return nil
}

func init() {
	proto.RegisterType((*COMM_PKG)(nil), "dispatch_pb.COMM_PKG")
	proto.RegisterType((*LOG_DATA_PKG)(nil), "dispatch_pb.LOG_DATA_PKG")
}

func init() { proto.RegisterFile("dispatch_pb.proto", fileDescriptor_93f2d25675cb07e3) }

var fileDescriptor_93f2d25675cb07e3 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xc9, 0x2c, 0x2e,
	0x48, 0x2c, 0x49, 0xce, 0x88, 0x2f, 0x48, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0x72, 0xe0, 0xe2, 0x70, 0xf6, 0xf7, 0xf5, 0x8d, 0x0f, 0xf0, 0x76, 0x17, 0x92, 0xe4,
	0xe2, 0x28, 0xc8, 0x4e, 0x8f, 0x2f, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54, 0x60, 0xd2, 0x60, 0x0d,
	0x62, 0x2f, 0xc8, 0x4e, 0x0f, 0xa9, 0x2c, 0x48, 0x05, 0x49, 0x15, 0xa5, 0x26, 0xe6, 0xc4, 0x17,
	0x64, 0xa7, 0x4b, 0x30, 0x29, 0x30, 0x69, 0xf0, 0x04, 0xb1, 0x83, 0xf8, 0x01, 0xd9, 0xe9, 0x4a,
	0x15, 0x5c, 0x3c, 0x3e, 0xfe, 0xee, 0xf1, 0x2e, 0x8e, 0x21, 0x8e, 0x60, 0x53, 0xc4, 0xb8, 0xd8,
	0x52, 0x12, 0x4b, 0x12, 0x33, 0x53, 0xc0, 0x66, 0x70, 0x06, 0x41, 0x79, 0x42, 0x32, 0x5c, 0x9c,
	0x25, 0x99, 0xb9, 0xa9, 0xc5, 0x25, 0x89, 0xb9, 0x05, 0x60, 0x33, 0x78, 0x83, 0x10, 0x02, 0x42,
	0x52, 0x5c, 0x1c, 0xc9, 0x39, 0x99, 0xa9, 0x79, 0x25, 0x99, 0x05, 0x12, 0xcc, 0x60, 0x7d, 0x70,
	0x3e, 0xc8, 0xc4, 0x9c, 0xfc, 0xf4, 0xdc, 0xe2, 0x74, 0x09, 0x16, 0xb0, 0xd5, 0x50, 0x1e, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x04, 0xe2, 0x06, 0x69, 0xdc, 0x00, 0x00, 0x00,
}
